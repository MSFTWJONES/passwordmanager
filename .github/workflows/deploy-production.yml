
name: Infrastructure and Application Deployment


on:
  # Triggers on push to main branch
  push:
    branches: [ main ]

jobs:
  INFRASTRUCTURE-DEPLOY:
    environment: Production
    runs-on: ubuntu-latest
    outputs:
      appName: ${{ steps.deploy-arm.outputs.appName }}
      hostName: ${{ steps.deploy-arm.outputs.hostName }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

        # Log into Azure
      - name: Login via Az module
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true

      #Deploy Initial Architecture resources 
      - name: Deploy ARM Template
        uses: azure/arm-deploy@main
        id: deploy-arm
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./deployment/arm/templates/azuredeploy.json
          parameters: ./deployment/arm/parameters/azuredeploy.parameters.json frontendRepositoryToken=${{ secrets.AZURE_GITHUB_TOKEN }}
          
  DOTNET-BUILD:
  #Environment protection rules for production apply
    environment: Production
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    #Setup .NET core for build
    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'

    - name: Build with dotnet
      run: dotnet build ./backend -c Release

    - name: dotnet publish
      run: dotnet publish ./backend -c Release -o ${{env.DOTNET_ROOT}}/backendapp

  #Publish binaries as a build artifact
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
       name: passman-backend
       path: ${{env.DOTNET_ROOT}}/backendapp


  APPLICATION-DEPLOY:
    environment: Production
    runs-on: windows-latest

    #Previous jobs must pass before this job runs
    needs: [ DOTNET-BUILD, INFRASTRUCTURE-DEPLOY ]

    steps:
    #Download build artiact from DOTNET-BUIILD
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: passman-backend

    # Log into Azure
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true

    # Deploy application to web app
    - name: Deploy Backend to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: '${{NEEDS.INFRASTRUCTURE-DEPLOY.OUTPUTS.appName}}'
        package: .
          
    - name: Configure App Settings 
      uses: azure/appservice-settings@v1
      with:
        app-name: '${{NEEDS.INFRASTRUCTURE-DEPLOY.OUTPUTS.appName}}'
        app-settings-json: '${{ secrets.APP_SETTINGS }}' 
        

