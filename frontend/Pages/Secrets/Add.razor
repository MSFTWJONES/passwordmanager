@page "/secrets/add"
@using Microsoft.AspNetCore.Authorization
@using web.models.secrets
@inject keyvault.web.services.SecretService _secretService;
@inject NavigationManager NavManager

@attribute [Authorize]
<div class="container">
    <h1>Add Secret</h1>
    <EditForm Model=@model OnValidSubmit=@FormSubmitted>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>
                Secret Name:
                <InputText @bind-Value=model.name class="form-control" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Secret Value:
                <InputText @bind-Value=model.value class="form-control" />
            </label>
        </div>
        <input type="submit" class="btn btn-primary" value="Save" />
        <NavLink href="/secrets" class="btn btn-primary"
            role="button">Cancel</NavLink>
    </EditForm>
</div>
@code {
    [CascadingParameter]
    public Notification notification { get; set; }

    private AddSecretModel model = new AddSecretModel();

    async Task FormSubmitted(EditContext editContext)
    {
        try
        {
            bool formIsValid = editContext.Validate();
            if (formIsValid && editContext.IsModified())
            {
                notification.DisplayLoading();
                await _secretService.Add(model);
                NavManager.NavigateTo("/secrets");
            }

        }
        catch (Exception ex)
        {
            notification.ProcessError(ex);
        }
        finally
        {
            notification.HideLoading();
        }
    }

}