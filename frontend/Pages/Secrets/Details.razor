@page "/secrets/details/{id}"
@using Microsoft.AspNetCore.Authorization
@using web.models.secrets
@inject keyvault.web.services.SecretService _secretService;
@inject Microsoft.AspNetCore.Components.NavigationManager nav;

@attribute [Authorize]
<div class="container">
    <h1>Secret Details</h1>
    @if (secretModel != null)
    {
        <figure class="text-center">
            <blockquote class="blockquote">
                <p>@secretModel.name</p>
            </blockquote>
            <figcaption class="blockquote-footer">
                @secretModel.id
            </figcaption>
        </figure>
        <dl class="row">
            <dt class="col-sm-3">Last Update</dt>
            <dd class="col-sm-9">@secretModel.Properties.updatedOn</dd>

            <dt class="col-sm-3">Version</dt>
            <dd class="col-sm-9">@secretModel.Properties.version</dd>

            <dt class="col-sm-3">Recovery Level</dt>
            <dd class="col-sm-9">@secretModel.Properties.recoveryLevel</dd>

            <dt class="col-sm-3">Recovery Days</dt>
            <dd class="col-sm-9">@secretModel.Properties.recoverableDays</dd>

            <dt class="col-sm-3">Secret</dt>
            <dd class="col-sm-9">@secretModel.value</dd>
        </dl>
        <button class="btn btn-primary" @onclick="() => NavDetails(secretModel.name)">
            Edit
        </button>
    }
</div>
@code {

    [CascadingParameter]
    public Notification notification { get; set; }

    [Parameter]
    public string id { get; set; }

    private DetailsViewSecretModel secretModel;
    protected override async Task OnInitializedAsync()
    {
        notification.DisplayLoading();
        try
        {
            secretModel = await _secretService.Get(id);
        }
        catch (Exception ex)
        {
            notification.ProcessError(ex);
        }
        finally
        {
            notification.HideLoading();
        }
    }

    public void NavDetails(string secretName)
    {
        nav.NavigateTo(String.Format("/secrets/edit/{0}", secretName));
    }

}