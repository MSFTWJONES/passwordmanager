@page "/error"

@using Microsoft.Extensions.Logging
@inject ILogger<Error> Logger

<CascadingValue Value=this>
        @if(ErrorDisplay != false)
        {
        <div class="alert alert-warning" role="alert">
            <p class="mb-0">@ErrorMessage
                <button type="button" class="close" aria-label="Close" @onclick="() => CloseError()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </p>
        </div>
        }
    @ChildContent
</CascadingValue>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public bool ErrorDisplay {get; set;}

    public String ErrorMessage {get; set;}

    public void ProcessError(Exception ex)
    {
        ErrorMessage = ex.Message;
        ErrorDisplay = true;
        this.StateHasChanged();
    }

    public void CloseError()
    {
        ErrorDisplay = false;
        this.StateHasChanged();
    }
}